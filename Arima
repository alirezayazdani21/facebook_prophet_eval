
#https://blog.exploratory.io/is-prophet-better-than-arima-for-forecasting-time-series-fa9ae08a5851
#https://medium.com/analytics-vidhya/time-series-forecasting-arima-vs-prophet-5015928e402a
#https://insightimi.wordpress.com/2020/07/21/financial-market-prediction-arima-vs-lstm-vs-facebook-prophet/
#https://www.kaggle.com/cdabakoglu/time-series-forecasting-arima-lstm-prophet
#https://kourentzes.com/forecasting/2017/07/29/benchmarking-facebooks-prophet/


library(quantmod)
library(dplyr)
library(tidyverse)
library(lubridate)
library(forecast)
library(prophet)
library(ggplot2)

#######################################
getSymbols("UNRATE",src="FRED")
#UNRATE <- to.quarterly(log(lag.xts(UNRATE,1)),indexAt="yearqtr",OHLC=F)['1991/2018']

#######################################
DF<-fortify.zoo(diff(UNRATE['1950/2010'])) %>% mutate(year=year(Index)) %>% na.omit(.)
#DF<-fortify.zoo(UNRATE['1950/2010']) %>% mutate(year=year(Index)) %>% na.omit(.)
colnames(DF)<-c("ds","y","year")

DF$ds<-as.Date(DF$ds)

DF_tr<- DF %>% filter(year <= 2005)
DF_te<-DF %>% filter(year >= 2006)

train<-DF_tr %>% select(ds,y)
test<-DF_te %>% select(ds,y)

###################################
#ARIMA
set.seed(1234567)
arima_tr<- auto.arima(train$y)
summary(arima_tr)
arima_te<-forecast(arima_tr,h=length(test$y))

prophet_fit<- prophet(train,growth="linear")
train$cap<-15
test$cap<-15
prophet_fit<- prophet(train,growth="logistic",mcmc.samples=100)

prophet_tr<- predict(prophet_fit,train)
prophet_te<-predict(prophet_fit,test)

arima_pred<-rbind.data.frame(arima_tr$fitted,arima_te$mean)

###################################
tr_pred<- DF_tr %>% mutate(sample="tr")
tr_pred$arima<-as.numeric(arima_tr$fitted)
tr_pred$prophet<-as.numeric(prophet_tr$yhat)

te_pred<- DF_te %>% mutate(sample="te")
te_pred$arima<-as.numeric(arima_te$mean)
te_pred$prophet<-as.numeric(prophet_te$yhat)

###################################
all_pred<-rbind.data.frame(tr_pred,te_pred) %>% select(ds,y,arima,prophet) %>% 
  pivot_longer(!ds,names_to = "model", values_to = "prediction") 

ggplot(all_pred,aes(x=ds, y=prediction, col=model,linetype=model ))+ geom_line()+
  geom_vline(xintercept = as.numeric(as.Date("2006-01-01")), linetype=4,color = "blue")

#####################################
#####################################
library(gt)
library(Metrics)

metrics_grp<-function(x,y){round(rbind(
  mape(x,y),
  mae(x,y),
  rmse(x,y),
  mase(x,y),
  mdae(x,y),
  bias(x,y),
  rae(x,y),
  sse(x,y)
),3)
}

metrics_df<-rbind.data.frame("MAPE",
                             "MAE",
                             "RMSE",
                             "MASE",
                             "MDAE",
                             "BIAS",
                             "RAE",
                             "SSE"
)
colnames(metrics_df)<-"Metric"

metrics_df<- metrics_df %>% 
  mutate(Arima_train=metrics_grp(train$y,arima_tr$fitted),
         Prophet_train=metrics_grp(train$y,prophet_tr$yhat),
         Arima_test=metrics_grp(test$y,arima_te$mean),
         Prophet_test=metrics_grp(test$y,prophet_te$yhat)
  ) 

gt(metrics_df) %>% 
  tab_header(title = "Arima vs. Prophet") %>%
  tab_style(
    style = cell_text(style = "italic",weight="bold"),
    locations = cells_body(columns = vars(Metric))
  ) %>% 
  tab_style(
    style = cell_text(style = "italic",weight="bold"),
    locations = cells_column_labels(columns = 1:5)
  ) %>% 
  tab_style(
    style = cell_fill(color = "gray85"),
    locations = cells_data(columns = 2:3)
  ) %>% 
  tab_style(
    style = cell_fill(color = "lightblue"),
    locations = cells_data(columns = 4:5)
  ) 

#######################################
acf(arima_tr$residuals)
acf(prophet_tr$yhat-train$y)

Box.test(arima_tr$residuals, type = "Ljung")#p-val<5% reject the null of normality
Box.test(prophet_tr$yhat-train$y, type = "Ljung")
#######################################



